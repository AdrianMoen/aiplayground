[
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1994.",
    "output": "MATCH (p:Person) WHERE p.born = 1994 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Regina King.",
    "output": "MATCH (p1:Person {name: 'Regina King'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has John Boyega acted in?",
    "output": "MATCH (:Person {name: 'John Boyega'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Natalie Portman?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Natalie Portman'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Keanu Reeves acted in?",
    "output": "MATCH (:Person {name: 'Keanu Reeves'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Emma Stone acted in?",
    "output": "MATCH (:Person {name: 'Emma Stone'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Christian Bale.",
    "output": "MATCH (p1:Person {name: 'Christian Bale'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2016.",
    "output": "MATCH (p:Person) WHERE p.born = 2016 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Robert Downey Jr.?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Robert Downey Jr.'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Morgan Freeman acted in?",
    "output": "MATCH (:Person {name: 'Morgan Freeman'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Emily Blunt?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Emily Blunt'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Social Network'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Social Network'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2011.",
    "output": "MATCH (p:Person) WHERE p.born = 2011 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Angelina Jolie.",
    "output": "MATCH (p1:Person {name: 'Angelina Jolie'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Daisy Ridley?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Daisy Ridley'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'night'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'night' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Tessa Thompson.",
    "output": "MATCH (p1:Person {name: 'Tessa Thompson'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Angelina Jolie acted in?",
    "output": "MATCH (:Person {name: 'Angelina Jolie'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'king'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'king' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Mark Ruffalo.",
    "output": "MATCH (p1:Person {name: 'Mark Ruffalo'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Scarlett Johansson acted in?",
    "output": "MATCH (:Person {name: 'Scarlett Johansson'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Harrison Ford acted in?",
    "output": "MATCH (:Person {name: 'Harrison Ford'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Lord of the Rings: The Fellowship of the Ring'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Lord of the Rings: The Fellowship of the Ring'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Regina King acted in?",
    "output": "MATCH (:Person {name: 'Regina King'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 6 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 6 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'The Dark Knight'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'The Dark Knight'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Shawshank Redemption'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Shawshank Redemption'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2024.",
    "output": "MATCH (p:Person) WHERE p.born = 2024 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'war'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'war' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2012.",
    "output": "MATCH (m:Movie) WHERE m.released = 2012 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Regina King acted in?",
    "output": "MATCH (:Person {name: 'Regina King'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Angelina Jolie?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Angelina Jolie'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Cate Blanchett?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Cate Blanchett'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Titanic'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Titanic'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Monsters, Inc.'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Monsters, Inc.'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Arrival'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Arrival'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1996.",
    "output": "MATCH (m:Movie) WHERE m.released = 1996 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has John Boyega acted in?",
    "output": "MATCH (:Person {name: 'John Boyega'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Arrival'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Arrival'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Christian Bale?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Christian Bale'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 6 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 6 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Mad Max: Fury Road'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Mad Max: Fury Road'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 6 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 6 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has John Boyega acted in?",
    "output": "MATCH (:Person {name: 'John Boyega'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Michael B. Jordan?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Michael B. Jordan'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 7 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 7 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Mark Ruffalo.",
    "output": "MATCH (p1:Person {name: 'Mark Ruffalo'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Chris Evans.",
    "output": "MATCH (p1:Person {name: 'Chris Evans'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'WALL\u00b7E'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'WALL\u00b7E'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'La La Land'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'La La Land'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2011.",
    "output": "MATCH (m:Movie) WHERE m.released = 2011 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 8 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 8 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'king'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'king' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'night'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'night' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Whiplash'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Whiplash'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 5 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 5 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Morgan Freeman.",
    "output": "MATCH (p1:Person {name: 'Morgan Freeman'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Arrival'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Arrival'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Scarlett Johansson acted in?",
    "output": "MATCH (:Person {name: 'Scarlett Johansson'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Natalie Portman.",
    "output": "MATCH (p1:Person {name: 'Natalie Portman'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Mark Ruffalo.",
    "output": "MATCH (p1:Person {name: 'Mark Ruffalo'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Sandra Bullock acted in?",
    "output": "MATCH (:Person {name: 'Sandra Bullock'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Morgan Freeman.",
    "output": "MATCH (p1:Person {name: 'Morgan Freeman'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has George Clooney acted in?",
    "output": "MATCH (:Person {name: 'George Clooney'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1990.",
    "output": "MATCH (m:Movie) WHERE m.released = 1990 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Robert Downey Jr. acted in?",
    "output": "MATCH (:Person {name: 'Robert Downey Jr.'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Inception'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Inception'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2023.",
    "output": "MATCH (p:Person) WHERE p.born = 2023 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 5 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 5 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 10 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 10 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Tom Hanks?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Tom Hanks'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'love'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'love' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1983.",
    "output": "MATCH (p:Person) WHERE p.born = 1983 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Finding Nemo'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Finding Nemo'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Brie Larson?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Brie Larson'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Brad Pitt.",
    "output": "MATCH (p1:Person {name: 'Brad Pitt'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1985.",
    "output": "MATCH (p:Person) WHERE p.born = 1985 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1977.",
    "output": "MATCH (p:Person) WHERE p.born = 1977 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1985.",
    "output": "MATCH (m:Movie) WHERE m.released = 1985 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Rami Malek.",
    "output": "MATCH (p1:Person {name: 'Rami Malek'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Gal Gadot?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Gal Gadot'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'love'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'love' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 3 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 3 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Sandra Bullock?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Sandra Bullock'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Parasite'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Parasite'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Tom Hanks.",
    "output": "MATCH (p1:Person {name: 'Tom Hanks'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Denzel Washington?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Denzel Washington'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Toy Story'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Toy Story'}) RETURN d.name AS director;"
  }
]