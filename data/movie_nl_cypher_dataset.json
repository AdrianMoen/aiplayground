[
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'love'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'love' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1985.",
    "output": "MATCH (p:Person) WHERE p.born = 1985 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'The Dark Knight'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'The Dark Knight'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'king'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'king' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'war'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'war' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Leonardo DiCaprio.",
    "output": "MATCH (p1:Person {name: 'Leonardo DiCaprio'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1975.",
    "output": "MATCH (m:Movie) WHERE m.released = 1975 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Star Wars: A New Hope'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Star Wars: A New Hope'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Scarlett Johansson?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Scarlett Johansson'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Princess Mononoke'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Princess Mononoke'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with George Clooney.",
    "output": "MATCH (p1:Person {name: 'George Clooney'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 7 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 7 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2018.",
    "output": "MATCH (m:Movie) WHERE m.released = 2018 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Blade Runner 2049'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Blade Runner 2049'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Ryan Gosling acted in?",
    "output": "MATCH (:Person {name: 'Ryan Gosling'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Lord of the Rings: The Fellowship of the Ring'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Lord of the Rings: The Fellowship of the Ring'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Emma Stone acted in?",
    "output": "MATCH (:Person {name: 'Emma Stone'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'star'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'star' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'night'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'night' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Pedro Pascal acted in?",
    "output": "MATCH (:Person {name: 'Pedro Pascal'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2021.",
    "output": "MATCH (p:Person) WHERE p.born = 2021 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2016.",
    "output": "MATCH (m:Movie) WHERE m.released = 2016 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Morgan Freeman.",
    "output": "MATCH (p1:Person {name: 'Morgan Freeman'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2023.",
    "output": "MATCH (p:Person) WHERE p.born = 2023 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Meryl Streep?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Meryl Streep'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Anne Hathaway?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Anne Hathaway'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'love'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'love' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Parasite'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Parasite'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Interstellar'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Interstellar'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Ryan Gosling.",
    "output": "MATCH (p1:Person {name: 'Ryan Gosling'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 8 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 8 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Birdman'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Birdman'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Matt Damon acted in?",
    "output": "MATCH (:Person {name: 'Matt Damon'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2014.",
    "output": "MATCH (p:Person) WHERE p.born = 2014 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'war'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'war' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Coco'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Coco'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Titanic'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Titanic'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 9 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 9 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2010.",
    "output": "MATCH (p:Person) WHERE p.born = 2010 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Se7en'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Se7en'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1984.",
    "output": "MATCH (m:Movie) WHERE m.released = 1984 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2021.",
    "output": "MATCH (m:Movie) WHERE m.released = 2021 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Viola Davis acted in?",
    "output": "MATCH (:Person {name: 'Viola Davis'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1974.",
    "output": "MATCH (p:Person) WHERE p.born = 1974 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Toy Story'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Toy Story'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Matt Damon acted in?",
    "output": "MATCH (:Person {name: 'Matt Damon'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 9 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 9 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 5 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 5 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1978.",
    "output": "MATCH (p:Person) WHERE p.born = 1978 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Finding Nemo'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Finding Nemo'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2017.",
    "output": "MATCH (p:Person) WHERE p.born = 2017 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Margot Robbie?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Margot Robbie'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Viola Davis?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Viola Davis'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has George Clooney acted in?",
    "output": "MATCH (:Person {name: 'George Clooney'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Grand Budapest Hotel'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Grand Budapest Hotel'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2025.",
    "output": "MATCH (m:Movie) WHERE m.released = 2025 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'dark'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'dark' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Blade Runner 2049'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Blade Runner 2049'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Keanu Reeves?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Keanu Reeves'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Cate Blanchett.",
    "output": "MATCH (p1:Person {name: 'Cate Blanchett'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Gal Gadot?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Gal Gadot'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2005.",
    "output": "MATCH (p:Person) WHERE p.born = 2005 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2013.",
    "output": "MATCH (m:Movie) WHERE m.released = 2013 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'king'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'king' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2019.",
    "output": "MATCH (p:Person) WHERE p.born = 2019 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Brad Pitt acted in?",
    "output": "MATCH (:Person {name: 'Brad Pitt'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1997.",
    "output": "MATCH (p:Person) WHERE p.born = 1997 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Gravity'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Gravity'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2016.",
    "output": "MATCH (m:Movie) WHERE m.released = 2016 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2002.",
    "output": "MATCH (p:Person) WHERE p.born = 2002 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Grand Budapest Hotel'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Grand Budapest Hotel'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2023.",
    "output": "MATCH (p:Person) WHERE p.born = 2023 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Anne Hathaway?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Anne Hathaway'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Birdman'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Birdman'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Coco'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Coco'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2008.",
    "output": "MATCH (m:Movie) WHERE m.released = 2008 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Hugh Jackman acted in?",
    "output": "MATCH (:Person {name: 'Hugh Jackman'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1977.",
    "output": "MATCH (m:Movie) WHERE m.released = 1977 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Harrison Ford acted in?",
    "output": "MATCH (:Person {name: 'Harrison Ford'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Pulp Fiction'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Pulp Fiction'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Toy Story'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Toy Story'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'love'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'love' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Dark Knight'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Dark Knight'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 5 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 5 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2003.",
    "output": "MATCH (p:Person) WHERE p.born = 2003 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Margot Robbie?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Margot Robbie'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Coco'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Coco'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Mad Max: Fury Road'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Mad Max: Fury Road'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Emily Blunt.",
    "output": "MATCH (p1:Person {name: 'Emily Blunt'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Michael B. Jordan acted in?",
    "output": "MATCH (:Person {name: 'Michael B. Jordan'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Star Wars: A New Hope'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Star Wars: A New Hope'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'night'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'night' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2007.",
    "output": "MATCH (m:Movie) WHERE m.released = 2007 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Up'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Up'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'The Matrix'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'The Matrix'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'king'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'king' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1984.",
    "output": "MATCH (m:Movie) WHERE m.released = 1984 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'love'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'love' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Keanu Reeves acted in?",
    "output": "MATCH (:Person {name: 'Keanu Reeves'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Whiplash'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Whiplash'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 6 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 6 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Toy Story'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Toy Story'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Ryan Reynolds?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Ryan Reynolds'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Gone Girl'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Gone Girl'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Anne Hathaway.",
    "output": "MATCH (p1:Person {name: 'Anne Hathaway'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'love'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'love' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Denzel Washington.",
    "output": "MATCH (p1:Person {name: 'Denzel Washington'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Joaquin Phoenix.",
    "output": "MATCH (p1:Person {name: 'Joaquin Phoenix'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 3 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 3 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'love'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'love' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Paul Rudd.",
    "output": "MATCH (p1:Person {name: 'Paul Rudd'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Emma Stone acted in?",
    "output": "MATCH (:Person {name: 'Emma Stone'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Avatar'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Avatar'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Coco'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Coco'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 5 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 5 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Samuel L. Jackson.",
    "output": "MATCH (p1:Person {name: 'Samuel L. Jackson'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1999.",
    "output": "MATCH (p:Person) WHERE p.born = 1999 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'The Shawshank Redemption'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'The Shawshank Redemption'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2011.",
    "output": "MATCH (m:Movie) WHERE m.released = 2011 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1975.",
    "output": "MATCH (m:Movie) WHERE m.released = 1975 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Titanic'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Titanic'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Hugh Jackman.",
    "output": "MATCH (p1:Person {name: 'Hugh Jackman'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 6 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 6 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Natalie Portman.",
    "output": "MATCH (p1:Person {name: 'Natalie Portman'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Revenant'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Revenant'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1994.",
    "output": "MATCH (m:Movie) WHERE m.released = 1994 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2020.",
    "output": "MATCH (p:Person) WHERE p.born = 2020 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 7 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 7 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Oscar Isaac.",
    "output": "MATCH (p1:Person {name: 'Oscar Isaac'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 5 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 5 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Parasite'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Parasite'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Pulp Fiction'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Pulp Fiction'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Chadwick Boseman?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Chadwick Boseman'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2017.",
    "output": "MATCH (m:Movie) WHERE m.released = 2017 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Natalie Portman acted in?",
    "output": "MATCH (:Person {name: 'Natalie Portman'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2007.",
    "output": "MATCH (m:Movie) WHERE m.released = 2007 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 5 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 5 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2002.",
    "output": "MATCH (m:Movie) WHERE m.released = 2002 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Shawshank Redemption'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Shawshank Redemption'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Keanu Reeves?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Keanu Reeves'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Django Unchained'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Django Unchained'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'war'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'war' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Up'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Up'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Leonardo DiCaprio?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Leonardo DiCaprio'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Morgan Freeman?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Morgan Freeman'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Emily Blunt.",
    "output": "MATCH (p1:Person {name: 'Emily Blunt'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Florence Pugh?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Florence Pugh'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Jennifer Lawrence acted in?",
    "output": "MATCH (:Person {name: 'Jennifer Lawrence'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'The Lion King'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'The Lion King'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Sandra Bullock acted in?",
    "output": "MATCH (:Person {name: 'Sandra Bullock'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1995.",
    "output": "MATCH (p:Person) WHERE p.born = 1995 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Lion King'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Lion King'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1999.",
    "output": "MATCH (p:Person) WHERE p.born = 1999 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Mahershala Ali acted in?",
    "output": "MATCH (:Person {name: 'Mahershala Ali'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'love'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'love' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'war'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'war' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'The Grand Budapest Hotel'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'The Grand Budapest Hotel'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1978.",
    "output": "MATCH (p:Person) WHERE p.born = 1978 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Keanu Reeves acted in?",
    "output": "MATCH (:Person {name: 'Keanu Reeves'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Birdman'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Birdman'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1980.",
    "output": "MATCH (p:Person) WHERE p.born = 1980 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 7 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 7 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Tessa Thompson?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Tessa Thompson'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2012.",
    "output": "MATCH (m:Movie) WHERE m.released = 2012 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2012.",
    "output": "MATCH (p:Person) WHERE p.born = 2012 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'dark'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'dark' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1977.",
    "output": "MATCH (p:Person) WHERE p.born = 1977 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'king'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'king' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Whiplash'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Whiplash'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2008.",
    "output": "MATCH (p:Person) WHERE p.born = 2008 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Memento'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Memento'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Spirited Away'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Spirited Away'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2002.",
    "output": "MATCH (p:Person) WHERE p.born = 2002 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 7 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 7 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1975.",
    "output": "MATCH (m:Movie) WHERE m.released = 1975 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Ryan Gosling.",
    "output": "MATCH (p1:Person {name: 'Ryan Gosling'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1970.",
    "output": "MATCH (m:Movie) WHERE m.released = 1970 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Regina King acted in?",
    "output": "MATCH (:Person {name: 'Regina King'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Spirited Away'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Spirited Away'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1980.",
    "output": "MATCH (p:Person) WHERE p.born = 1980 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 9 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 9 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1977.",
    "output": "MATCH (m:Movie) WHERE m.released = 1977 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'king'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'king' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Coco'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Coco'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2023.",
    "output": "MATCH (m:Movie) WHERE m.released = 2023 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Ana de Armas acted in?",
    "output": "MATCH (:Person {name: 'Ana de Armas'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Blade Runner 2049'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Blade Runner 2049'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Inception'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Inception'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1993.",
    "output": "MATCH (p:Person) WHERE p.born = 1993 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1992.",
    "output": "MATCH (m:Movie) WHERE m.released = 1992 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Saving Private Ryan'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Saving Private Ryan'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'night'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'night' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Daniel Kaluuya.",
    "output": "MATCH (p1:Person {name: 'Daniel Kaluuya'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Saving Private Ryan'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Saving Private Ryan'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Jurassic Park'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Jurassic Park'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Scarlett Johansson.",
    "output": "MATCH (p1:Person {name: 'Scarlett Johansson'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Memento'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Memento'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Emily Blunt.",
    "output": "MATCH (p1:Person {name: 'Emily Blunt'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Whiplash'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Whiplash'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Interstellar'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Interstellar'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Leonardo DiCaprio.",
    "output": "MATCH (p1:Person {name: 'Leonardo DiCaprio'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 6 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 6 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Gravity'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Gravity'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Harrison Ford acted in?",
    "output": "MATCH (:Person {name: 'Harrison Ford'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Star Wars: A New Hope'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Star Wars: A New Hope'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2012.",
    "output": "MATCH (m:Movie) WHERE m.released = 2012 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Django Unchained'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Django Unchained'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Ryan Gosling acted in?",
    "output": "MATCH (:Person {name: 'Ryan Gosling'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1992.",
    "output": "MATCH (p:Person) WHERE p.born = 1992 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with John Boyega.",
    "output": "MATCH (p1:Person {name: 'John Boyega'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Scarlett Johansson acted in?",
    "output": "MATCH (:Person {name: 'Scarlett Johansson'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'night'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'night' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Up'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Up'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1972.",
    "output": "MATCH (p:Person) WHERE p.born = 1972 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'war'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'war' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Denzel Washington.",
    "output": "MATCH (p1:Person {name: 'Denzel Washington'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Margot Robbie acted in?",
    "output": "MATCH (:Person {name: 'Margot Robbie'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Mark Ruffalo?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Mark Ruffalo'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'star'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'star' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Anne Hathaway?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Anne Hathaway'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1972.",
    "output": "MATCH (p:Person) WHERE p.born = 1972 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Tom Hanks.",
    "output": "MATCH (p1:Person {name: 'Tom Hanks'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Birdman'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Birdman'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Keanu Reeves.",
    "output": "MATCH (p1:Person {name: 'Keanu Reeves'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Daniel Kaluuya acted in?",
    "output": "MATCH (:Person {name: 'Daniel Kaluuya'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Emily Blunt acted in?",
    "output": "MATCH (:Person {name: 'Emily Blunt'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'king'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'king' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2002.",
    "output": "MATCH (p:Person) WHERE p.born = 2002 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2012.",
    "output": "MATCH (p:Person) WHERE p.born = 2012 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Priyanka Chopra.",
    "output": "MATCH (p1:Person {name: 'Priyanka Chopra'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Oscar Isaac.",
    "output": "MATCH (p1:Person {name: 'Oscar Isaac'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2005.",
    "output": "MATCH (p:Person) WHERE p.born = 2005 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Avatar'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Avatar'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Emily Blunt.",
    "output": "MATCH (p1:Person {name: 'Emily Blunt'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with John Boyega.",
    "output": "MATCH (p1:Person {name: 'John Boyega'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Monsters, Inc.'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Monsters, Inc.'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Harrison Ford?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Harrison Ford'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Zendaya.",
    "output": "MATCH (p1:Person {name: 'Zendaya'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1989.",
    "output": "MATCH (m:Movie) WHERE m.released = 1989 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1983.",
    "output": "MATCH (p:Person) WHERE p.born = 1983 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Ana de Armas.",
    "output": "MATCH (p1:Person {name: 'Ana de Armas'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Tessa Thompson?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Tessa Thompson'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Gal Gadot acted in?",
    "output": "MATCH (:Person {name: 'Gal Gadot'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 10 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 10 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'The Grand Budapest Hotel'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'The Grand Budapest Hotel'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 5 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 5 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'night'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'night' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Will Smith?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Will Smith'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Mad Max: Fury Road'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Mad Max: Fury Road'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Avatar'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Avatar'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Godfather'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Godfather'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1985.",
    "output": "MATCH (m:Movie) WHERE m.released = 1985 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 9 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 9 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Anne Hathaway?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Anne Hathaway'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Hugh Jackman.",
    "output": "MATCH (p1:Person {name: 'Hugh Jackman'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Sandra Bullock.",
    "output": "MATCH (p1:Person {name: 'Sandra Bullock'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Princess Mononoke'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Princess Mononoke'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2018.",
    "output": "MATCH (m:Movie) WHERE m.released = 2018 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with George Clooney.",
    "output": "MATCH (p1:Person {name: 'George Clooney'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Inside Out'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Inside Out'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 3 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 3 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Forrest Gump'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Forrest Gump'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 5 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 5 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 8 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 8 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 9 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 9 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 5 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 5 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 10 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 10 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2018.",
    "output": "MATCH (p:Person) WHERE p.born = 2018 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Spirited Away'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Spirited Away'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2019.",
    "output": "MATCH (p:Person) WHERE p.born = 2019 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 6 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 6 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1998.",
    "output": "MATCH (p:Person) WHERE p.born = 1998 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'king'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'king' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1985.",
    "output": "MATCH (p:Person) WHERE p.born = 1985 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1991.",
    "output": "MATCH (p:Person) WHERE p.born = 1991 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Timothee Chalamet acted in?",
    "output": "MATCH (:Person {name: 'Timothee Chalamet'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'dark'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'dark' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Star Wars: A New Hope'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Star Wars: A New Hope'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Oscar Isaac.",
    "output": "MATCH (p1:Person {name: 'Oscar Isaac'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Lord of the Rings: The Fellowship of the Ring'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Lord of the Rings: The Fellowship of the Ring'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'star'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'star' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Will Smith.",
    "output": "MATCH (p1:Person {name: 'Will Smith'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 9 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 9 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1983.",
    "output": "MATCH (m:Movie) WHERE m.released = 1983 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Cate Blanchett.",
    "output": "MATCH (p1:Person {name: 'Cate Blanchett'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Oscar Isaac?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Oscar Isaac'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2024.",
    "output": "MATCH (m:Movie) WHERE m.released = 2024 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Cate Blanchett?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Cate Blanchett'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 3 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 3 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Harrison Ford acted in?",
    "output": "MATCH (:Person {name: 'Harrison Ford'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Joaquin Phoenix.",
    "output": "MATCH (p1:Person {name: 'Joaquin Phoenix'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows George Clooney?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'George Clooney'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 6 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 6 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1997.",
    "output": "MATCH (p:Person) WHERE p.born = 1997 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 3 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 3 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Will Smith.",
    "output": "MATCH (p1:Person {name: 'Will Smith'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Paul Rudd.",
    "output": "MATCH (p1:Person {name: 'Paul Rudd'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Gravity'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Gravity'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Monsters, Inc.'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Monsters, Inc.'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1995.",
    "output": "MATCH (m:Movie) WHERE m.released = 1995 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Florence Pugh?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Florence Pugh'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1975.",
    "output": "MATCH (m:Movie) WHERE m.released = 1975 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Angelina Jolie.",
    "output": "MATCH (p1:Person {name: 'Angelina Jolie'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 5 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 5 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1986.",
    "output": "MATCH (m:Movie) WHERE m.released = 1986 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Priyanka Chopra.",
    "output": "MATCH (p1:Person {name: 'Priyanka Chopra'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Gravity'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Gravity'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Will Smith acted in?",
    "output": "MATCH (:Person {name: 'Will Smith'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Ryan Gosling.",
    "output": "MATCH (p1:Person {name: 'Ryan Gosling'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Jennifer Lawrence.",
    "output": "MATCH (p1:Person {name: 'Jennifer Lawrence'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'star'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'star' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2017.",
    "output": "MATCH (m:Movie) WHERE m.released = 2017 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1992.",
    "output": "MATCH (m:Movie) WHERE m.released = 1992 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Princess Mononoke'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Princess Mononoke'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2018.",
    "output": "MATCH (m:Movie) WHERE m.released = 2018 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1985.",
    "output": "MATCH (m:Movie) WHERE m.released = 1985 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'The Godfather'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'The Godfather'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Robert Downey Jr.?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Robert Downey Jr.'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'The Dark Knight'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'The Dark Knight'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Matt Damon?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Matt Damon'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 7 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 7 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Chris Evans acted in?",
    "output": "MATCH (:Person {name: 'Chris Evans'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Pedro Pascal?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Pedro Pascal'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Mad Max: Fury Road'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Mad Max: Fury Road'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'war'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'war' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1989.",
    "output": "MATCH (m:Movie) WHERE m.released = 1989 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows John Boyega?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'John Boyega'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Viola Davis.",
    "output": "MATCH (p1:Person {name: 'Viola Davis'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'The Shawshank Redemption'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'The Shawshank Redemption'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Oscar Isaac?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Oscar Isaac'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Interstellar'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Interstellar'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2024.",
    "output": "MATCH (p:Person) WHERE p.born = 2024 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Brad Pitt?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Brad Pitt'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Leonardo DiCaprio?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Leonardo DiCaprio'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Timothee Chalamet acted in?",
    "output": "MATCH (:Person {name: 'Timothee Chalamet'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Emily Blunt.",
    "output": "MATCH (p1:Person {name: 'Emily Blunt'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Keanu Reeves acted in?",
    "output": "MATCH (:Person {name: 'Keanu Reeves'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Tom Hanks acted in?",
    "output": "MATCH (:Person {name: 'Tom Hanks'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Hugh Jackman.",
    "output": "MATCH (p1:Person {name: 'Hugh Jackman'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'star'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'star' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Rami Malek acted in?",
    "output": "MATCH (:Person {name: 'Rami Malek'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 5 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 5 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Samuel L. Jackson.",
    "output": "MATCH (p1:Person {name: 'Samuel L. Jackson'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2009.",
    "output": "MATCH (p:Person) WHERE p.born = 2009 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 10 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 10 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Paul Rudd.",
    "output": "MATCH (p1:Person {name: 'Paul Rudd'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Ryan Gosling?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Ryan Gosling'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Sandra Bullock acted in?",
    "output": "MATCH (:Person {name: 'Sandra Bullock'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'night'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'night' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 6 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 6 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 9 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 9 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Scarlett Johansson acted in?",
    "output": "MATCH (:Person {name: 'Scarlett Johansson'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 8 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 8 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Her'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Her'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'The Social Network'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'The Social Network'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1991.",
    "output": "MATCH (p:Person) WHERE p.born = 1991 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2008.",
    "output": "MATCH (p:Person) WHERE p.born = 2008 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2005.",
    "output": "MATCH (p:Person) WHERE p.born = 2005 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2003.",
    "output": "MATCH (m:Movie) WHERE m.released = 2003 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Fight Club'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Fight Club'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'The Wolf of Wall Street'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'The Wolf of Wall Street'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 6 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 6 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 10 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 10 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 3 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 3 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'night'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'night' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Django Unchained'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Django Unchained'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Mad Max: Fury Road'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Mad Max: Fury Road'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Meryl Streep?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Meryl Streep'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 8 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 8 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Chadwick Boseman.",
    "output": "MATCH (p1:Person {name: 'Chadwick Boseman'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Denzel Washington acted in?",
    "output": "MATCH (:Person {name: 'Denzel Washington'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 7 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 7 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1986.",
    "output": "MATCH (p:Person) WHERE p.born = 1986 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Forrest Gump'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Forrest Gump'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Se7en'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Se7en'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'king'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'king' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Avatar'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Avatar'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Gone Girl'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Gone Girl'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2016.",
    "output": "MATCH (p:Person) WHERE p.born = 2016 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Mahershala Ali?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Mahershala Ali'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Christian Bale?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Christian Bale'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Parasite'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Parasite'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Birdman'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Birdman'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Mad Max: Fury Road'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Mad Max: Fury Road'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2015.",
    "output": "MATCH (m:Movie) WHERE m.released = 2015 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Whiplash'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Whiplash'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1973.",
    "output": "MATCH (m:Movie) WHERE m.released = 1973 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2014.",
    "output": "MATCH (p:Person) WHERE p.born = 2014 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Spirited Away'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Spirited Away'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2006.",
    "output": "MATCH (m:Movie) WHERE m.released = 2006 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2000.",
    "output": "MATCH (p:Person) WHERE p.born = 2000 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 10 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 10 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Samuel L. Jackson acted in?",
    "output": "MATCH (:Person {name: 'Samuel L. Jackson'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1986.",
    "output": "MATCH (m:Movie) WHERE m.released = 1986 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'star'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'star' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Rami Malek?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Rami Malek'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1979.",
    "output": "MATCH (m:Movie) WHERE m.released = 1979 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Toy Story'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Toy Story'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1975.",
    "output": "MATCH (p:Person) WHERE p.born = 1975 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Forrest Gump'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Forrest Gump'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Pedro Pascal.",
    "output": "MATCH (p1:Person {name: 'Pedro Pascal'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Daniel Kaluuya?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Daniel Kaluuya'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Inside Out'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Inside Out'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Michael B. Jordan.",
    "output": "MATCH (p1:Person {name: 'Michael B. Jordan'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 7 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 7 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Margot Robbie?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Margot Robbie'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2006.",
    "output": "MATCH (p:Person) WHERE p.born = 2006 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Natalie Portman?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Natalie Portman'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Chadwick Boseman?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Chadwick Boseman'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Spirited Away'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Spirited Away'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'La La Land'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'La La Land'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'dark'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'dark' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Jurassic Park'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Jurassic Park'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'dark'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'dark' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1996.",
    "output": "MATCH (m:Movie) WHERE m.released = 1996 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 10 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 10 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1972.",
    "output": "MATCH (p:Person) WHERE p.born = 1972 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Parasite'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Parasite'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2014.",
    "output": "MATCH (p:Person) WHERE p.born = 2014 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'La La Land'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'La La Land'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Emily Blunt?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Emily Blunt'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Blade Runner 2049'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Blade Runner 2049'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'war'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'war' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Princess Mononoke'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Princess Mononoke'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Whiplash'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Whiplash'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Shawshank Redemption'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Shawshank Redemption'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1980.",
    "output": "MATCH (m:Movie) WHERE m.released = 1980 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2008.",
    "output": "MATCH (p:Person) WHERE p.born = 2008 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Christian Bale?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Christian Bale'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 7 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 7 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Ryan Gosling.",
    "output": "MATCH (p1:Person {name: 'Ryan Gosling'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 10 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 10 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'war'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'war' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1997.",
    "output": "MATCH (m:Movie) WHERE m.released = 1997 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Pedro Pascal acted in?",
    "output": "MATCH (:Person {name: 'Pedro Pascal'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1971.",
    "output": "MATCH (p:Person) WHERE p.born = 1971 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'dark'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'dark' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Ana de Armas?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Ana de Armas'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2018.",
    "output": "MATCH (m:Movie) WHERE m.released = 2018 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2006.",
    "output": "MATCH (p:Person) WHERE p.born = 2006 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2018.",
    "output": "MATCH (m:Movie) WHERE m.released = 2018 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Gone Girl'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Gone Girl'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 7 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 7 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Up'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Up'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Rami Malek.",
    "output": "MATCH (p1:Person {name: 'Rami Malek'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 8 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 8 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Will Smith.",
    "output": "MATCH (p1:Person {name: 'Will Smith'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Emily Blunt acted in?",
    "output": "MATCH (:Person {name: 'Emily Blunt'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Memento'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Memento'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Oscar Isaac.",
    "output": "MATCH (p1:Person {name: 'Oscar Isaac'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 7 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 7 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Mahershala Ali.",
    "output": "MATCH (p1:Person {name: 'Mahershala Ali'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1999.",
    "output": "MATCH (m:Movie) WHERE m.released = 1999 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'night'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'night' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1990.",
    "output": "MATCH (p:Person) WHERE p.born = 1990 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Mark Ruffalo.",
    "output": "MATCH (p1:Person {name: 'Mark Ruffalo'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2012.",
    "output": "MATCH (m:Movie) WHERE m.released = 2012 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 9 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 9 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1982.",
    "output": "MATCH (m:Movie) WHERE m.released = 1982 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Daniel Kaluuya acted in?",
    "output": "MATCH (:Person {name: 'Daniel Kaluuya'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 10 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 10 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1983.",
    "output": "MATCH (m:Movie) WHERE m.released = 1983 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2005.",
    "output": "MATCH (p:Person) WHERE p.born = 2005 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Parasite'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Parasite'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 10 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 10 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'love'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'love' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Sandra Bullock?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Sandra Bullock'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Mad Max: Fury Road'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Mad Max: Fury Road'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2005.",
    "output": "MATCH (m:Movie) WHERE m.released = 2005 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Morgan Freeman.",
    "output": "MATCH (p1:Person {name: 'Morgan Freeman'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Forrest Gump'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Forrest Gump'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Her'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Her'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2002.",
    "output": "MATCH (p:Person) WHERE p.born = 2002 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1996.",
    "output": "MATCH (p:Person) WHERE p.born = 1996 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 10 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 10 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Gravity'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Gravity'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Revenant'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Revenant'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'WALL\u00b7E'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'WALL\u00b7E'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Shawshank Redemption'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Shawshank Redemption'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2019.",
    "output": "MATCH (p:Person) WHERE p.born = 2019 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Will Smith.",
    "output": "MATCH (p1:Person {name: 'Will Smith'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2022.",
    "output": "MATCH (p:Person) WHERE p.born = 2022 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1988.",
    "output": "MATCH (m:Movie) WHERE m.released = 1988 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2023.",
    "output": "MATCH (p:Person) WHERE p.born = 2023 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Ana de Armas?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Ana de Armas'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 5 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 5 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 10 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 10 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Will Smith acted in?",
    "output": "MATCH (:Person {name: 'Will Smith'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Gal Gadot.",
    "output": "MATCH (p1:Person {name: 'Gal Gadot'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Anne Hathaway acted in?",
    "output": "MATCH (:Person {name: 'Anne Hathaway'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Toy Story'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Toy Story'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with George Clooney.",
    "output": "MATCH (p1:Person {name: 'George Clooney'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Leonardo DiCaprio.",
    "output": "MATCH (p1:Person {name: 'Leonardo DiCaprio'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Chadwick Boseman acted in?",
    "output": "MATCH (:Person {name: 'Chadwick Boseman'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 9 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 9 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Emily Blunt.",
    "output": "MATCH (p1:Person {name: 'Emily Blunt'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Her'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Her'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1978.",
    "output": "MATCH (m:Movie) WHERE m.released = 1978 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Will Smith?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Will Smith'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 3 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 3 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Wolf of Wall Street'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Wolf of Wall Street'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Shawshank Redemption'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Shawshank Redemption'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 7 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 7 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Daniel Kaluuya acted in?",
    "output": "MATCH (:Person {name: 'Daniel Kaluuya'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Tessa Thompson.",
    "output": "MATCH (p1:Person {name: 'Tessa Thompson'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has John Boyega acted in?",
    "output": "MATCH (:Person {name: 'John Boyega'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Priyanka Chopra.",
    "output": "MATCH (p1:Person {name: 'Priyanka Chopra'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 3 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 3 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Keanu Reeves?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Keanu Reeves'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Spirited Away'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Spirited Away'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1984.",
    "output": "MATCH (p:Person) WHERE p.born = 1984 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'star'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'star' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'star'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'star' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Mad Max: Fury Road'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Mad Max: Fury Road'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1972.",
    "output": "MATCH (m:Movie) WHERE m.released = 1972 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Natalie Portman acted in?",
    "output": "MATCH (:Person {name: 'Natalie Portman'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1992.",
    "output": "MATCH (p:Person) WHERE p.born = 1992 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Margot Robbie acted in?",
    "output": "MATCH (:Person {name: 'Margot Robbie'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Saving Private Ryan'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Saving Private Ryan'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Florence Pugh.",
    "output": "MATCH (p1:Person {name: 'Florence Pugh'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Titanic'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Titanic'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Fight Club'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Fight Club'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Cate Blanchett?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Cate Blanchett'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows John Boyega?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'John Boyega'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Her'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Her'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Robert Downey Jr.?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Robert Downey Jr.'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Gravity'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Gravity'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1999.",
    "output": "MATCH (p:Person) WHERE p.born = 1999 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2012.",
    "output": "MATCH (p:Person) WHERE p.born = 2012 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2021.",
    "output": "MATCH (m:Movie) WHERE m.released = 2021 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 7 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 7 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Shawshank Redemption'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Shawshank Redemption'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 8 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 8 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Harrison Ford?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Harrison Ford'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Oscar Isaac.",
    "output": "MATCH (p1:Person {name: 'Oscar Isaac'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1999.",
    "output": "MATCH (p:Person) WHERE p.born = 1999 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1982.",
    "output": "MATCH (p:Person) WHERE p.born = 1982 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Ryan Reynolds.",
    "output": "MATCH (p1:Person {name: 'Ryan Reynolds'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'dark'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'dark' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Florence Pugh.",
    "output": "MATCH (p1:Person {name: 'Florence Pugh'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Florence Pugh acted in?",
    "output": "MATCH (:Person {name: 'Florence Pugh'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2014.",
    "output": "MATCH (p:Person) WHERE p.born = 2014 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1971.",
    "output": "MATCH (p:Person) WHERE p.born = 1971 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Ryan Gosling.",
    "output": "MATCH (p1:Person {name: 'Ryan Gosling'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2006.",
    "output": "MATCH (m:Movie) WHERE m.released = 2006 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2008.",
    "output": "MATCH (m:Movie) WHERE m.released = 2008 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 7 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 7 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'WALL\u00b7E'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'WALL\u00b7E'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has George Clooney acted in?",
    "output": "MATCH (:Person {name: 'George Clooney'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Monsters, Inc.'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Monsters, Inc.'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2013.",
    "output": "MATCH (p:Person) WHERE p.born = 2013 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Spirited Away'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Spirited Away'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'king'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'king' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1989.",
    "output": "MATCH (m:Movie) WHERE m.released = 1989 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 3 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 3 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Meryl Streep?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Meryl Streep'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Fight Club'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Fight Club'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1990.",
    "output": "MATCH (p:Person) WHERE p.born = 1990 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Samuel L. Jackson.",
    "output": "MATCH (p1:Person {name: 'Samuel L. Jackson'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'The Dark Knight'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'The Dark Knight'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Brie Larson acted in?",
    "output": "MATCH (:Person {name: 'Brie Larson'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2023.",
    "output": "MATCH (p:Person) WHERE p.born = 2023 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'La La Land'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'La La Land'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 7 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 7 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Brad Pitt acted in?",
    "output": "MATCH (:Person {name: 'Brad Pitt'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Star Wars: A New Hope'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Star Wars: A New Hope'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Zendaya.",
    "output": "MATCH (p1:Person {name: 'Zendaya'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Morgan Freeman acted in?",
    "output": "MATCH (:Person {name: 'Morgan Freeman'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Tom Hanks.",
    "output": "MATCH (p1:Person {name: 'Tom Hanks'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2004.",
    "output": "MATCH (p:Person) WHERE p.born = 2004 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'star'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'star' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has John Boyega acted in?",
    "output": "MATCH (:Person {name: 'John Boyega'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2007.",
    "output": "MATCH (p:Person) WHERE p.born = 2007 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Rami Malek.",
    "output": "MATCH (p1:Person {name: 'Rami Malek'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Emma Stone acted in?",
    "output": "MATCH (:Person {name: 'Emma Stone'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Gone Girl'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Gone Girl'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2009.",
    "output": "MATCH (m:Movie) WHERE m.released = 2009 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Daniel Kaluuya acted in?",
    "output": "MATCH (:Person {name: 'Daniel Kaluuya'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Princess Mononoke'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Princess Mononoke'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'king'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'king' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 7 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 7 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Brad Pitt.",
    "output": "MATCH (p1:Person {name: 'Brad Pitt'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Inception'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Inception'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1989.",
    "output": "MATCH (m:Movie) WHERE m.released = 1989 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'dark'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'dark' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Revenant'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Revenant'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 8 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 8 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Ana de Armas.",
    "output": "MATCH (p1:Person {name: 'Ana de Armas'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Wolf of Wall Street'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Wolf of Wall Street'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 9 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 9 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1972.",
    "output": "MATCH (p:Person) WHERE p.born = 1972 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Matt Damon acted in?",
    "output": "MATCH (:Person {name: 'Matt Damon'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 10 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 10 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Birdman'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Birdman'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'king'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'king' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Timothee Chalamet acted in?",
    "output": "MATCH (:Person {name: 'Timothee Chalamet'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Natalie Portman acted in?",
    "output": "MATCH (:Person {name: 'Natalie Portman'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Ryan Gosling.",
    "output": "MATCH (p1:Person {name: 'Ryan Gosling'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Forrest Gump'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Forrest Gump'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Princess Mononoke'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Princess Mononoke'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Scarlett Johansson?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Scarlett Johansson'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2020.",
    "output": "MATCH (m:Movie) WHERE m.released = 2020 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Sandra Bullock acted in?",
    "output": "MATCH (:Person {name: 'Sandra Bullock'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Toy Story'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Toy Story'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'The Shawshank Redemption'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'The Shawshank Redemption'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Up'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Up'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Star Wars: A New Hope'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Star Wars: A New Hope'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Regina King acted in?",
    "output": "MATCH (:Person {name: 'Regina King'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'WALL\u00b7E'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'WALL\u00b7E'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1987.",
    "output": "MATCH (m:Movie) WHERE m.released = 1987 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Dark Knight'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Dark Knight'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2021.",
    "output": "MATCH (p:Person) WHERE p.born = 2021 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Forrest Gump'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Forrest Gump'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1978.",
    "output": "MATCH (m:Movie) WHERE m.released = 1978 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1992.",
    "output": "MATCH (m:Movie) WHERE m.released = 1992 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Up'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Up'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Scarlett Johansson acted in?",
    "output": "MATCH (:Person {name: 'Scarlett Johansson'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'La La Land'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'La La Land'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1978.",
    "output": "MATCH (m:Movie) WHERE m.released = 1978 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Brie Larson.",
    "output": "MATCH (p1:Person {name: 'Brie Larson'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'king'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'king' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'star'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'star' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 8 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 8 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Emma Stone?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Emma Stone'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 6 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 6 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Leonardo DiCaprio?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Leonardo DiCaprio'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1999.",
    "output": "MATCH (p:Person) WHERE p.born = 1999 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1973.",
    "output": "MATCH (m:Movie) WHERE m.released = 1973 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 9 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 9 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with John Boyega.",
    "output": "MATCH (p1:Person {name: 'John Boyega'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'star'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'star' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'night'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'night' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Robert Downey Jr.?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Robert Downey Jr.'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'dark'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'dark' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2009.",
    "output": "MATCH (p:Person) WHERE p.born = 2009 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Zendaya?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Zendaya'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Cate Blanchett acted in?",
    "output": "MATCH (:Person {name: 'Cate Blanchett'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Brie Larson?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Brie Larson'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1999.",
    "output": "MATCH (p:Person) WHERE p.born = 1999 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Margot Robbie?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Margot Robbie'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Blade Runner 2049'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Blade Runner 2049'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 6 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 6 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Will Smith.",
    "output": "MATCH (p1:Person {name: 'Will Smith'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 9 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 9 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Paul Rudd.",
    "output": "MATCH (p1:Person {name: 'Paul Rudd'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'night'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'night' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Priyanka Chopra.",
    "output": "MATCH (p1:Person {name: 'Priyanka Chopra'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1993.",
    "output": "MATCH (p:Person) WHERE p.born = 1993 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Gone Girl'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Gone Girl'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'love'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'love' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'love'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'love' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Emma Stone.",
    "output": "MATCH (p1:Person {name: 'Emma Stone'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Angelina Jolie acted in?",
    "output": "MATCH (:Person {name: 'Angelina Jolie'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2007.",
    "output": "MATCH (m:Movie) WHERE m.released = 2007 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Emily Blunt acted in?",
    "output": "MATCH (:Person {name: 'Emily Blunt'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'star'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'star' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Emily Blunt acted in?",
    "output": "MATCH (:Person {name: 'Emily Blunt'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Paul Rudd.",
    "output": "MATCH (p1:Person {name: 'Paul Rudd'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1988.",
    "output": "MATCH (m:Movie) WHERE m.released = 1988 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Harrison Ford?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Harrison Ford'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Emma Stone acted in?",
    "output": "MATCH (:Person {name: 'Emma Stone'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Mark Ruffalo?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Mark Ruffalo'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Gladiator'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Gladiator'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 6 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 6 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'night'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'night' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Brad Pitt acted in?",
    "output": "MATCH (:Person {name: 'Brad Pitt'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2006.",
    "output": "MATCH (p:Person) WHERE p.born = 2006 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Blade Runner 2049'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Blade Runner 2049'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Daniel Kaluuya?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Daniel Kaluuya'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 2008.",
    "output": "MATCH (m:Movie) WHERE m.released = 2008 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1971.",
    "output": "MATCH (p:Person) WHERE p.born = 1971 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Whiplash'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Whiplash'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1991.",
    "output": "MATCH (p:Person) WHERE p.born = 1991 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Tom Hanks acted in?",
    "output": "MATCH (:Person {name: 'Tom Hanks'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Gladiator'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Gladiator'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Emily Blunt?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Emily Blunt'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Keanu Reeves.",
    "output": "MATCH (p1:Person {name: 'Keanu Reeves'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Spirited Away'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Spirited Away'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1975.",
    "output": "MATCH (m:Movie) WHERE m.released = 1975 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'The Revenant'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'The Revenant'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Gal Gadot.",
    "output": "MATCH (p1:Person {name: 'Gal Gadot'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Chris Evans acted in?",
    "output": "MATCH (:Person {name: 'Chris Evans'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Harrison Ford acted in?",
    "output": "MATCH (:Person {name: 'Harrison Ford'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Regina King acted in?",
    "output": "MATCH (:Person {name: 'Regina King'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Pedro Pascal?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Pedro Pascal'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'love'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'love' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Titanic'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Titanic'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Natalie Portman?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Natalie Portman'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'night'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'night' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 9 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 9 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 10 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 10 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Ryan Gosling.",
    "output": "MATCH (p1:Person {name: 'Ryan Gosling'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'The Grand Budapest Hotel'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'The Grand Budapest Hotel'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'night'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'night' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Brad Pitt.",
    "output": "MATCH (p1:Person {name: 'Brad Pitt'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2013.",
    "output": "MATCH (p:Person) WHERE p.born = 2013 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Hugh Jackman?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Hugh Jackman'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1972.",
    "output": "MATCH (p:Person) WHERE p.born = 1972 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Django Unchained'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Django Unchained'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Natalie Portman?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Natalie Portman'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1983.",
    "output": "MATCH (m:Movie) WHERE m.released = 1983 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1983.",
    "output": "MATCH (p:Person) WHERE p.born = 1983 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'La La Land'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'La La Land'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1990.",
    "output": "MATCH (p:Person) WHERE p.born = 1990 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'love'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'love' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 9 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 9 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Dark Knight'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Dark Knight'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Timothee Chalamet.",
    "output": "MATCH (p1:Person {name: 'Timothee Chalamet'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'The Grand Budapest Hotel'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'The Grand Budapest Hotel'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Keanu Reeves acted in?",
    "output": "MATCH (:Person {name: 'Keanu Reeves'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Chadwick Boseman.",
    "output": "MATCH (p1:Person {name: 'Chadwick Boseman'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1997.",
    "output": "MATCH (m:Movie) WHERE m.released = 1997 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1999.",
    "output": "MATCH (m:Movie) WHERE m.released = 1999 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'story'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'story' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Florence Pugh acted in?",
    "output": "MATCH (:Person {name: 'Florence Pugh'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Florence Pugh.",
    "output": "MATCH (p1:Person {name: 'Florence Pugh'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Daisy Ridley.",
    "output": "MATCH (p1:Person {name: 'Daisy Ridley'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Christian Bale.",
    "output": "MATCH (p1:Person {name: 'Christian Bale'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'star'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'star' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1990.",
    "output": "MATCH (m:Movie) WHERE m.released = 1990 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Monsters, Inc.'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Monsters, Inc.'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 8 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 8 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'star'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'star' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'dark'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'dark' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Ana de Armas.",
    "output": "MATCH (p1:Person {name: 'Ana de Armas'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Brie Larson.",
    "output": "MATCH (p1:Person {name: 'Brie Larson'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'star'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'star' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2017.",
    "output": "MATCH (p:Person) WHERE p.born = 2017 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has George Clooney acted in?",
    "output": "MATCH (:Person {name: 'George Clooney'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Regina King acted in?",
    "output": "MATCH (:Person {name: 'Regina King'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'The Shawshank Redemption'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'The Shawshank Redemption'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'war'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'war' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'The Social Network'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'The Social Network'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Paul Rudd acted in?",
    "output": "MATCH (:Person {name: 'Paul Rudd'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Saving Private Ryan'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Saving Private Ryan'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'dark'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'dark' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 1982.",
    "output": "MATCH (p:Person) WHERE p.born = 1982 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'WALL\u00b7E'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'WALL\u00b7E'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Princess Mononoke'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Princess Mononoke'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'dark'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'dark' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 10 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 10 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Mahershala Ali?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Mahershala Ali'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Michael B. Jordan?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Michael B. Jordan'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Tessa Thompson?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Tessa Thompson'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Priyanka Chopra?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Priyanka Chopra'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Robert Downey Jr. acted in?",
    "output": "MATCH (:Person {name: 'Robert Downey Jr.'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 10 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 10 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2020.",
    "output": "MATCH (p:Person) WHERE p.born = 2020 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Find all people born in 2007.",
    "output": "MATCH (p:Person) WHERE p.born = 2007 RETURN p.name AS person;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1992.",
    "output": "MATCH (m:Movie) WHERE m.released = 1992 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'night'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'night' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 10 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 10 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1973.",
    "output": "MATCH (m:Movie) WHERE m.released = 1973 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Christian Bale acted in?",
    "output": "MATCH (:Person {name: 'Christian Bale'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'king'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'king' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'war'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'war' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Mark Ruffalo?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Mark Ruffalo'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List actors who have acted with Gal Gadot.",
    "output": "MATCH (p1:Person {name: 'Gal Gadot'})-[:ACTED_IN]->(m:Movie)<-[:ACTED_IN]-(co:Person) RETURN DISTINCT co.name AS coActor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Zendaya?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Zendaya'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "List all movies released in 1998.",
    "output": "MATCH (m:Movie) WHERE m.released = 1998 RETURN m.title AS title;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Tessa Thompson?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Tessa Thompson'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Se7en'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Se7en'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who follows Ryan Reynolds?",
    "output": "MATCH (follower:Person)-[:FOLLOWS]->(p:Person {name: 'Ryan Reynolds'}) RETURN follower.name AS follower;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show people who both directed and acted in the same movie.",
    "output": "MATCH (p:Person)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(p) RETURN DISTINCT p.name AS person, m.title AS movie;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Pulp Fiction'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Pulp Fiction'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 4 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 4 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Daisy Ridley acted in?",
    "output": "MATCH (:Person {name: 'Daisy Ridley'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Show me movies whose title contains the word 'war'.",
    "output": "MATCH (m:Movie) WHERE toLower(m.title) CONTAINS 'war' RETURN m.title AS title, m.released AS year;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which actors acted in 'Inception'?",
    "output": "MATCH (p:Person)-[:ACTED_IN]->(m:Movie {title: 'Inception'}) RETURN p.name AS actor;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Who directed the movie 'Arrival'?",
    "output": "MATCH (d:Person)-[:DIRECTED]->(m:Movie {title: 'Arrival'}) RETURN d.name AS director;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "Which movies feature at least 5 different actors?",
    "output": "MATCH (m:Movie)<-[:ACTED_IN]-(p:Person) WITH m, count(DISTINCT p) AS actorCount WHERE actorCount >= 5 RETURN m.title AS title, actorCount;"
  },
  {
    "instruction": "Convert the following natural language query about movies to a Cypher query for Neo4j graph database.",
    "input": "How many movies has Meryl Streep acted in?",
    "output": "MATCH (:Person {name: 'Meryl Streep'})-[:ACTED_IN]->(m:Movie) RETURN count(m) AS movieCount;"
  }
]